#Expectancy per age group 2
ggplot(data = df3, mapping = aes(x = age, y = expectancyprogress)) +
ggtitle("Life expectancy growth per age group per age year") +
labs(y="Standardised Life Expectancy Growth (years)", x = "Calendar Year") +
geom_bar(stat='identity') +
facet_wrap(~ time, scales="free")+
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.4))
#Expectancy per age group 2
ggplot(data = df3, mapping = aes(x = age, y = expectancyprogress)) +
ggtitle("Life expectancy growth per age group per age year") +
labs(y="Standardised Life Expectancy Growth (years)", x = "Age Group") +
geom_bar(stat='identity') +
facet_wrap(~ time, scales="free")+
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.4))
ggplot(df4.grp,aes(x=factor(time),y=value)) +
ggtitle("Life expectancy per year per sex") +
geom_bar(stat="identity",position="dodge") +
geom_col(colour="black") +
labs(y="Life Expectancy (years)", x = "Calendar Year") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.4))
#Expectancy per sex 3 maybe plot difference
df4=subset(df2, (df2$sex != "Total") & (df2$age != "80-89" & df2$age != "0-9"))
df4=aggregate(list(value=df4$value), by = list(time=df4$time, sex=df4$sex, geo=df4$geo), FUN = mean)
df4$expectancyprogress=ave(df4$value, df4$sex, FUN=function(y) y-min(y))
ggplot(df4,aes(x=factor(time),y=expectancyprogress,fill=sex)) +
ggtitle("Life expectancy per year per sex") +
geom_bar(stat="identity",position="dodge") +
labs(y="Life Expectancy (years)", x = "Calendar Year")
ggplot(df4,aes(x=factor(time),y=expectancyprogress,fill=sex)) +
ggtitle("Life expectancy per year per sex") +
geom_bar(stat="identity",position="dodge") +
labs(y="Life Expectancy (years)", x = "Calendar Year")
ggplot(df4,aes(x=factor(time),y=expectancyprogress,fill=sex)) +
ggtitle("Life expectancy growth per year per sex") +
geom_bar(stat="identity",position="dodge") +
labs(y="Life Expectancy (years)", x = "Calendar Year")
ggplot(df4,aes(x=factor(time),y=expectancyprogress,fill=sex)) +
ggtitle("Life expectancy per year per sex") +
geom_bar(stat="identity",position="dodge") +
labs(y="Life Expectancy (years)", x = "Calendar Year")
ggplot(df4.grp,aes(x=factor(time),y=value)) +
ggtitle("Life expectancy per year per sex") +
geom_bar(stat="identity",position="dodge") +
geom_col(colour="black") +
labs(y="Life Expectancy (years)", x = "Calendar Year") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.4))
ggplot(df4.grp,aes(x=factor(time),y=value)) +
ggtitle("Difference in Life expectancy growth per year per sex") +
geom_bar(stat="identity",position="dodge") +
geom_col(colour="black") +
labs(y="Life Expectancy (years)", x = "Calendar Year") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.4))
ggplot(df4.grp,aes(x=factor(time),y=value)) +
ggtitle("Difference in Life expectancy growth per year per sex") +
geom_bar(stat="identity",position="dodge") +
geom_col(colour="black") +
labs(y="Life Expectancy (years)", x = "Calendar Year") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.4))
#Happiness and gdp plummeted from 2010 onwards 6
ggplot(df.std, aes(x = year)) +
geom_line(aes(y = happiness, colour = "happiness")) +
geom_line(aes(y = gdp, colour = "gdp")) +
geom_line(aes(y = expenses, colour = "expenses")) +
theme(legend.position="top")
#Unemployment and suicides reached an all time high 7
ggplot(df.std, aes(year)) +
geom_line(aes(y = unemployment, colour = "unemployment")) +
geom_line(aes(y = suicides, colour = "suicides")) +
theme(legend.position="top")
#Unemployment and suicides reached an all time high 7
ggplot(df.std, aes(year)) +
ggtitle("Suicide and unemployment rates during the financial crisis") +
geom_line(aes(y = unemployment, colour = "unemployment")) +
geom_line(aes(y = suicides, colour = "suicides")) +
theme(legend.position="top")
#Unemployment and suicides reached an all time high 7
ggplot(df.std, aes(year)) +
ggtitle("Suicide and unemployment rates during the financial crisis") +
geom_line(aes(y = unemployment, colour = "unemployment")) +
geom_line(aes(y = suicides, colour = "suicides")) +
theme(legend.position="top")+
labs(y="Life Expectancy (years)", x = "Calendar Year")
#Unemployment and suicides reached an all time high 7
ggplot(df.std, aes(year)) +
ggtitle("Suicide and unemployment rates during the financial crisis") +
geom_line(aes(y = unemployment, colour = "unemployment")) +
geom_line(aes(y = suicides, colour = "suicides")) +
theme(legend.position="top")+
labs(y="Suicide & Unemployment (scaled)", x = "Calendar Year")
#Happiness and gdp plummeted from 2010 onwards 6
ggplot(df.std, aes(x = year)) +
ggtitle("Happiness,GDP and Healthcare expense rates during the financial crisis") +
geom_line(aes(y = happiness, colour = "happiness")) +
geom_line(aes(y = gdp, colour = "gdp")) +
geom_line(aes(y = expenses, colour = "expenses")) +
theme(legend.position="top")+
labs(y="Happiness,GDP and Healthcare expenses (scaled)", x = "Calendar Year")
#Happiness and gdp plummeted from 2010 onwards 6
ggplot(df.std, aes(x = year)) +
ggtitle("Happiness,GDP and Healthcare expenses rates during the financial crisis") +
geom_line(aes(y = happiness, colour = "happiness")) +
geom_line(aes(y = gdp, colour = "gdp")) +
geom_line(aes(y = expenses, colour = "expenses")) +
theme(legend.position="top")+
labs(y="Happiness,GDP and Healthcare expenses (scaled)", x = "Calendar Year")
#Happiness and gdp plummeted from 2010 onwards 6
ggplot(df.std, aes(x = year)) +
ggtitle("Happiness,GDP and Healthcare expenses during the financial crisis") +
geom_line(aes(y = happiness, colour = "happiness")) +
geom_line(aes(y = gdp, colour = "gdp")) +
geom_line(aes(y = expenses, colour = "expenses")) +
theme(legend.position="top")+
labs(y="Happiness,GDP and Healthcare expenses (scaled)", x = "Calendar Year")
#Greece's and europes life expectancy during economical crisis 8
ggplot(df10.srt, aes(x=geo, y=value)) +
geom_segment( aes(x=geo, xend=geo, y=0, yend=value), color="grey") +
geom_point(stat="identity", color="orange", size=3) +
geom_point(data=df10.srt[df10.srt$geo=="Greece",], aes(x=geo, y=value), colour="red", size=5) +
theme_light() +
theme(
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank()
) +
coord_flip() +
xlab("") +
ylab("Value of Y")
df10=df10[order(-df10$value),]
df10.srt=subset(df10, df10$time==2010)
df10.srt=df10.srt[order(df10.srt$value),]
df10.srt$geo=factor(df10.srt$geo, levels=unique(df10.srt$geo))
#Greece's and europes life expectancy during economical crisis 8
ggplot(df10.srt, aes(x=geo, y=value)) +
geom_segment( aes(x=geo, xend=geo, y=0, yend=value), color="grey") +
geom_point(stat="identity", color="orange", size=3) +
geom_point(data=df10.srt[df10.srt$geo=="Greece",], aes(x=geo, y=value), colour="red", size=5) +
theme_light() +
theme(
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank()
) +
coord_flip() +
xlab("") +
ylab("Value of Y")
#Greece's and europes life expectancy during economical crisis 8
ggplot(df10.srt, aes(x=geo, y=value)) +
geom_segment( aes(x=geo, xend=geo, y=0, yend=value), color="grey") +
geom_point(stat="identity", color="orange", size=3) +
geom_point(data=df10.srt[df10.srt$geo=="Greece",], aes(x=geo, y=value), colour="red", size=5) +
theme_light() +
theme(
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank()
) +
coord_flip() +
xlab("Countries") +
ylab("Year")
#Greece's and europes life expectancy during economical crisis 8
ggplot(df10.srt, aes(x=geo, y=value)) +
ggtitle("Suicide and unemployment rates during the financial crisis")
df10.srt=subset(df10, df10$time==2010)
df10.srt=df10.srt[order(df10.srt$value),]
df10.srt$geo=factor(df10.srt$geo, levels=unique(df10.srt$geo))
#Greece's and europes life expectancy during economical crisis 8
ggplot(df10.srt, aes(x=geo, y=value)) +
ggtitle("Suicide and unemployment rates during the financial crisis") +
geom_segment( aes(x=geo, xend=geo, y=0, yend=value), color="grey") +
geom_point(stat="identity", color="orange", size=3) +
geom_point(data=df10.srt[df10.srt$geo=="Greece",], aes(x=geo, y=value), colour="red", size=5) +
theme_light() +
theme(
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank()
) +
coord_flip() +
xlab("Countries") +
ylab("Year")
#Greece's and europes life expectancy during economical crisis 8
ggplot(df10.srt, aes(x=geo, y=value)) +
ggtitle("European life expectancy for a newborn") +
geom_segment( aes(x=geo, xend=geo, y=0, yend=value), color="grey") +
geom_point(stat="identity", color="orange", size=3) +
geom_point(data=df10.srt[df10.srt$geo=="Greece",], aes(x=geo, y=value), colour="red", size=5) +
theme_light() +
theme(
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank()
) +
coord_flip() +
xlab("Countries") +
ylab("Year")
#Greece's and europes life expectancy during economical crisis 8
ggplot(df10.srt, aes(x=geo, y=value)) +
ggtitle("European life expectancy for someone born in 2010") +
geom_segment( aes(x=geo, xend=geo, y=0, yend=value), color="grey") +
geom_point(stat="identity", color="orange", size=3) +
geom_point(data=df10.srt[df10.srt$geo=="Greece",], aes(x=geo, y=value), colour="red", size=5) +
theme_light() +
theme(
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank()
) +
coord_flip() +
xlab("Countries") +
ylab("Year")
df10.srt=subset(df10, df10$time==2012)
df10.srt=df10.srt[order(df10.srt$value),]
df10.srt$geo=factor(df10.srt$geo, levels=unique(df10.srt$geo))
#lost 2 positions
ggplot(df10.srt, aes(x=geo, y=value)) +
geom_segment( aes(x=geo, xend=geo, y=0, yend=value), color="grey") +
geom_point(stat="identity", color="orange", size=3) +
geom_point(data=df10.srt[df10.srt$geo=="Greece",], aes(x=geo, y=value), colour="red", size=5) +
theme_light() +
theme(
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank()
) +
coord_flip() +
xlab("") +
ylab("Value of Y")
#lost 2 positions
ggplot(df10.srt, aes(x=geo, y=value)) +
ggtitle("European life expectancy for someone born in 2012") +
geom_segment( aes(x=geo, xend=geo, y=0, yend=value), color="grey") +
geom_point(stat="identity", color="orange", size=3) +
geom_point(data=df10.srt[df10.srt$geo=="Greece",], aes(x=geo, y=value), colour="red", size=5) +
theme_light() +
theme(
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank()
) +
coord_flip() +
xlab("Countries") +
ylab("Year")
ggplot(df4.mean, aes(x = year)) +
geom_line(aes(y = happiness, colour = "red"), show.legend = FALSE) +
geom_line(aes(y = gdp, colour = "red"), show.legend = FALSE) +
geom_line(aes(y = expenses, colour = "red"), show.legend = FALSE) +
geom_line(aes(y = unemployment, colour = "green"), show.legend = FALSE) +
geom_line(aes(y = suicides, colour = "green"), show.legend = FALSE) +
geom_line(aes(y = expmean)) +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggplot(df4.mean, aes(x = suicides, y=happiness))+
geom_line()
ggplot(df4.mean, aes(x = gdp, y=expenses))+
geom_line()
ggplot(df4.mean, aes(x = suicides, y=happiness))+
ggtitle("Happiness,GDP and Healthcare expenses during the financial crisis") +
labs(y="Suicide & Unemployment (scaled)", x = "Calendar Year")+
geom_line()
ggplot(df4.mean, aes(x = suicides, y=happiness))+
ggtitle("sucides vs Happiness") +
labs(y="Suicide & Unemployment (scaled)", x = "Calendar Year")+
geom_line()
ggplot(df4.mean, aes(x = suicides, y=happiness))+
ggtitle("Sucides vs Happiness (correlation)") +
labs(y="Happiness (scaled)", x = "Sucides (scaled)")+
geom_line()
ggplot(df4.mean, aes(x = gdp, y=expenses))+
ggtitle("GDP vs Expenses (correlation)") +
labs(y="Expenses (scaled)", x = "GDP (scaled)")+
geom_line()
ggplot(df4.mean, aes(x = suicides, y=happiness))+
ggtitle("Sucides vs Happiness (correlation)") +
labs(y="Happiness (scaled)", x = "Sucides (scaled)")+
geom_line()
ggplot(df4.mean, aes(x = gdp, y=expenses))+
ggtitle("GDP vs Expenses (correlation)") +
labs(y="Expenses (scaled)", x = "GDP (scaled)")+
geom_line()
library(readxl)
library(dplyr) # data manipulation
library(tidyr) # data manipulation
library(purrr) # data manipulation
library(ggplot2) # data visualization
library(sf) # spatial data manipulation
library(rnaturalearth) # access to spatial data
library(tmap) # spatial data visualization
library(shiny)
library(shinydashboard)
library(plotly)
library(stringr)
library(plyr)
#Load data
data <- read_excel("demographics.xlsx")
df <- data.frame( age = data$AGE,
time = data$TIME,
sex = data$SEX,
geo = data$GEO,
value = data$Value)
#Summarize data
sapply(colnames(df), function(x) class(df[[x]]))
glimpse(data)
#Get useful data
df1=subset(df, df$geo == "Greece")
#Make value numeric
df1$value=as.numeric(as.character(df1$value))
#Split age into groups of age
df1.age=as.numeric(word(as.character(df1$age), 1))
df1.age[is.na(df1.age)]=0
df1$age=df1.age
#Get subset
df1.20=subset(df1, age<=20)
df1.agg = aggregate(list(value=df1.20$value), by = list(time=df1.20$time, sex=df1.20$sex, geo=df1.20$geo), FUN = mean)
categorize=function(el){
el = el %/% 10
el = el * 10
return(paste(el, el+9, sep="-"))
}
df2=df1
df2[1]=sapply(df2[,1], categorize)
df2 = aggregate(list(value=df2$value), by = list(age=df2$age, time=df2$time, sex=df2$sex, geo=df2$geo), FUN = mean)
#Expectancy per age group 1 The higher the age, the most the effects show
ggplot(data = df2, mapping = aes(x = time, y = value, colour = sex)) +
ggtitle("Life expectancy per year per age group") +
labs(y="Life Expectancy (years)", x = "Calendar Year") +
geom_line() +
facet_wrap(~ age, scales="free")
df3=subset(df2, sex=="Total")
df3$expectancyprogress=ave(df3$value, df3$age, FUN=function(y) y-min(y))
#Expectancy per age group 2
ggplot(data = df3, mapping = aes(x = age, y = expectancyprogress)) +
ggtitle("Life expectancy growth per age group per age year") +
labs(y="Standardised Life Expectancy Growth (years)", x = "Age Group") +
geom_bar(stat='identity') +
facet_wrap(~ time, scales="free")+
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.4))
#Expectancy per sex 3 maybe plot difference
df4=subset(df2, (df2$sex != "Total") & (df2$age != "80-89" & df2$age != "0-9"))
df4=aggregate(list(value=df4$value), by = list(time=df4$time, sex=df4$sex, geo=df4$geo), FUN = mean)
df4$expectancyprogress=ave(df4$value, df4$sex, FUN=function(y) y-min(y))
ggplot(df4,aes(x=factor(time),y=expectancyprogress,fill=sex)) +
ggtitle("Life expectancy per year per sex") +
geom_bar(stat="identity",position="dodge") +
labs(y="Life Expectancy (years)", x = "Calendar Year")
#group and show 4
df4.grp=subset(df4, df4$sex=="Females" | df4$sex=="Males")
df4.grp[df4.grp$sex=="Males",]$expectancyprogress = df4.grp[df4.grp$sex=="Males",]$expectancyprogress * -1
df4.grp=aggregate(list(value=df4.grp$expectancyprogress), by = list(time=df4.grp$time), FUN = sum)
ggplot(df4.grp,aes(x=factor(time),y=value)) +
ggtitle("Difference in Life expectancy growth per year per sex") +
geom_bar(stat="identity",position="dodge") +
geom_col(colour="black") +
labs(y="Life Expectancy (years)", x = "Calendar Year") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.4))
#Load medical expenses
data2 <- read_excel("healthcare expenses.xls", sheet = "Curr exp, per capita US$PPP")
data2=data.frame(t(subset(data2, data2[,1]=="Greece")))
data2=setNames(cbind(rownames(data2), data2, row.names = NULL), c("year", "expenses"))
data2=head(tail(data2,10),-3)
data2$year=c(2010,2011,2012,2013,2014,2015,2016)
df5 <- data.frame(year = data2$year,
expenses = data2$expenses)
#Suicides
data3=read_excel("healthcare expenses.xls", sheet = "Suicides, deaths per 100000 pop")
data3=data.frame(t(subset(data3, data3[,1]=="Greece")))
data3=setNames(cbind(rownames(data3), data3, row.names = NULL), c("year", "suicides"))
data3=head(data3,-2)
data3=tail(data3,7)
data3$year=c(2010,2011,2012,2013,2014,2015,2016)
df6=data.frame(year = data3$year,
suicides = data3$suicides)
#More data
data4=read_excel("unemployment to gdp.xlsx")
df7=data.frame(country = data4$country,
year = data4$year,
unemployment = data4$unemployment,
happiness = data4$happiness,
gdp = data4$GDP)
#Life expectancy
df8=subset(df1, df1$age==0 & df1$sex=="Total")
df8$expgrowth=df8$value-min(df8$value)
df8=head(tail(df8,8), -1)
#Merging
df.all=merge(tail(df7,-1), df5, by = "year")
df.all=merge(df.all, df6, by = "year")
df.all=merge(df.all, select(df8, "time", "expgrowth"), by.x="year", by.y="time")
df.all$expenses=as.numeric(as.character(df.all$expenses))
df.all$suicides=as.numeric(as.character(df.all$suicides))
library(scales)
df.std=df.all
df.std$unemployment=rescale(df.all$unemployment, to = c(0, 100))
df.std$happiness=rescale(df.all$happiness, to = c(0, 100))
df.std$gdp=rescale(df.all$gdp, to = c(0, 100))
df.std$expenses=rescale(df.all$expenses, to = c(0, 100))
df.std$suicides=rescale(df.all$suicides, to = c(0, 100))
df.std$expgrowth=rescale(df.all$expgrowth, to = c(0, 100))
df4.mean=df4
df4.mean=tail(head(aggregate(list(expmean=df4.mean$value), by = list(time=df4.mean$time), FUN = mean),-1),7)
df4.mean=merge(df.std, select(df4.mean, "time", "expmean"), by.x="year", by.y="time")
df4.mean$expmean=rescale(df4.mean$expmean, to = c(0, 100))
ggplot(df4.mean, aes(x = suicides, y=happiness))+
ggtitle("Sucides vs Happiness (correlation)") +
labs(y="Happiness (scaled)", x = "Sucides (scaled)")+
geom_line()
ggplot(df4.mean, aes(x = gdp, y=expenses))+
ggtitle("GDP vs Expenses (correlation)") +
labs(y="Expenses (scaled)", x = "GDP (scaled)")+
geom_line()
ggplot(df4.mean, aes(x = year)) +
geom_line(aes(y = happiness, colour = "red"), show.legend = FALSE) +
geom_line(aes(y = gdp, colour = "red"), show.legend = FALSE) +
geom_line(aes(y = expenses, colour = "red"), show.legend = FALSE) +
geom_line(aes(y = unemployment, colour = "green"), show.legend = FALSE) +
geom_line(aes(y = suicides, colour = "green"), show.legend = FALSE) +
geom_line(aes(y = expmean)) +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
#Happiness and gdp plummeted from 2010 onwards 6
ggplot(df.std, aes(x = year)) +
ggtitle("Happiness,GDP and Healthcare expenses during the financial crisis") +
geom_line(aes(y = happiness, colour = "happiness")) +
geom_line(aes(y = gdp, colour = "gdp")) +
geom_line(aes(y = expenses, colour = "expenses")) +
theme(legend.position="top")+
labs(y="Happiness,GDP and Healthcare expenses (scaled)", x = "Calendar Year")
#Unemployment and suicides reached an all time high 7
ggplot(df.std, aes(year)) +
ggtitle("Suicide and unemployment rates during the financial crisis") +
geom_line(aes(y = unemployment, colour = "unemployment")) +
geom_line(aes(y = suicides, colour = "suicides")) +
theme(legend.position="top")+
labs(y="Suicide & Unemployment (scaled)", x = "Calendar Year")
#General increase in life expectancy for the european union vs greece
df9=subset(df, df$geo=="European Union - 28 countries")
df9=subset(df9, df9$age=="Less than 1 year")
df9=subset(df9, df9$sex=="Total")
df9=subset(df9, as.numeric(as.character(df9$time))<2017 & as.numeric(as.character(df9$time))>=2010)
df9$value=as.numeric(as.character(df9$value))
df9$expgrowtheur=ave(df9$value, df9$sex, FUN=function(y) y-min(y))
df9
df.all=merge(df.all, select(df9, "time", "expgrowtheur"), by.x="year", by.y="time")
library(reshape2)
melt(select(df.all, 'year', 'expgrowth', 'expgrowtheur'), id.vars='year')
df.growth=melt(select(df.all, 'year', 'expgrowth', 'expgrowtheur'), id.vars='year')
#European union life expectancy vs greece's 7
ggplot(df.growth, aes(x=year,y=value, fill=variable)) +
ggtitle("Life expectancy growth (Europe vs Greece)") +
geom_bar(stat="identity",position="dodge") +
labs(y="Life Expectancy growth (years)", x = "Calendar Year") +
scale_y_continuous(breaks=seq(min(df.all$expgrowtheur), max(df.all$expgrowtheur)))
df.growthsc=df.growth
df.growthsc$value=rescale(df.growth$value, to = c(0, 100))
ggplot(df.growthsc, aes(x=year,y=value, fill=variable)) +
ggtitle("Life expectancy growth (Europe vs Greece)") +
geom_bar(stat="identity",position="dodge") +
labs(y="Life Expectancy growth (years)", x = "Calendar Year") +
scale_y_continuous(breaks=seq(min(df.all$expgrowtheur), max(df.all$expgrowtheur)))
df10=subset(df, df$age=="Less than 1 year")
df10=subset(df10, as.numeric(as.character(df10$time))<2017 & as.numeric(as.character(df10$time))>=2010)
df10=subset(df10, df10$sex=="Total")
df10=df10[!df10$value == ":", ]
df10 %>%
group_by(geo) %>%
filter(n() >= 6)
df10$value=as.numeric(as.character(df10$value))
df10=df10[order(-df10$value),]
df10.srt=subset(df10, df10$time==2010)
df10.srt=df10.srt[order(df10.srt$value),]
df10.srt$geo=factor(df10.srt$geo, levels=unique(df10.srt$geo))
#Greece's and europes life expectancy during economical crisis 8
ggplot(df10.srt, aes(x=geo, y=value)) +
ggtitle("European life expectancy for someone born in 2010") +
geom_segment( aes(x=geo, xend=geo, y=0, yend=value), color="grey") +
geom_point(stat="identity", color="orange", size=3) +
geom_point(data=df10.srt[df10.srt$geo=="Greece",], aes(x=geo, y=value), colour="red", size=5) +
theme_light() +
theme(
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank()
) +
coord_flip() +
xlab("Countries") +
ylab("Year")
df10.srt=subset(df10, df10$time==2012)
df10.srt=df10.srt[order(df10.srt$value),]
df10.srt$geo=factor(df10.srt$geo, levels=unique(df10.srt$geo))
#lost 2 positions
ggplot(df10.srt, aes(x=geo, y=value)) +
ggtitle("European life expectancy for someone born in 2012") +
geom_segment( aes(x=geo, xend=geo, y=0, yend=value), color="grey") +
geom_point(stat="identity", color="orange", size=3) +
geom_point(data=df10.srt[df10.srt$geo=="Greece",], aes(x=geo, y=value), colour="red", size=5) +
theme_light() +
theme(
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank()
) +
coord_flip() +
xlab("Countries") +
ylab("Year")
